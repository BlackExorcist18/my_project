# –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ 2 - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è
# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –≤ Python

import sys

# ===== 1. –î–ï–ö–û–†–ê–¢–û–† –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø =====

def logger(func):
    def wrapper(*args, **kwargs):
        print(f"üéØ –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ {func.__name__} —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ {args} –∏ {kwargs}")
        result = func(*args, **kwargs)
        print(f"üìù –§—É–Ω–∫—Ü–∏—è {func.__name__} –≤–µ—Ä–Ω—É–ª–∞ {result}")
        return result
    return wrapper

# –§—É–Ω–∫—Ü–∏–∏ —Å –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
@logger
def add(a, b):
    return a + b

@logger
def divide(a, b):
    if b == 0:
        return "–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å"
    return a / b

@logger
def greet(name):
    return f"–ü—Ä–∏–≤–µ—Ç, {name}!"

# ===== 2. –î–ï–ö–û–†–ê–¢–û–† –î–û–°–¢–£–ü–ê =====

def require_role(allowed_roles):
    def decorator(func):
        def wrapper(user, *args, **kwargs):
            if user.get('role') in allowed_roles:
                return func(user, *args, **kwargs)
            else:
                print(f"üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user['name']}")
                return None
        return wrapper
    return decorator

# –§—É–Ω–∫—Ü–∏–∏ —Å –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –¥–æ—Å—Ç—É–ø–∞
@require_role(['admin'])
def delete_database(user):
    print(f"üóëÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user['name']}")

@require_role(['admin', 'manager'])
def edit_settings(user):
    print(f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–º–µ–Ω–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user['name']}")

@require_role(['user', 'admin', 'manager'])
def view_data(user):
    print(f"üëÅÔ∏è –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user['name']}")

# ===== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò =====

def clear_screen():
    """–û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞"""
    print("\n" * 50)

def print_menu():
    """–í—ã–≤–æ–¥ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    print("=" * 60)
    print("          –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ê–Ø –†–ê–ë–û–¢–ê 2 - –î–ï–ö–û–†–ê–¢–û–†–´")
    print("=" * 60)
    print("1. üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("2. üö™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ –¥–æ—Å—Ç—É–ø–∞")
    print("3. üîÑ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤")
    print("4. üìã –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–¥ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤")
    print("0. ‚ùå –í—ã—Ö–æ–¥")
    print("=" * 60)

def test_logger_interactive():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    clear_screen()
    print("üéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–ï–ö–û–†–ê–¢–û–†–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø")
    print("-" * 50)
    
    while True:
        print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
        print("1. ‚ûï –°–ª–æ–∂–µ–Ω–∏–µ (add)")
        print("2. ‚ûó –î–µ–ª–µ–Ω–∏–µ (divide)")
        print("3. üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ (greet)")
        print("0. ‚Ü©Ô∏è –ù–∞–∑–∞–¥")
        
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é: ").strip()
        
        if choice == '1':
            try:
                a = float(input("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: "))
                b = float(input("–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: "))
                print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {add(a, b)}")
            except ValueError:
                print("‚ùå –û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞!")
                
        elif choice == '2':
            try:
                a = float(input("–í–≤–µ–¥–∏—Ç–µ –¥–µ–ª–∏–º–æ–µ: "))
                b = float(input("–í–≤–µ–¥–∏—Ç–µ –¥–µ–ª–∏—Ç–µ–ª—å: "))
                print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {divide(a, b)}")
            except ValueError:
                print("‚ùå –û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞!")
                
        elif choice == '3':
            name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ")
            print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {greet(name)}")
            
        elif choice == '0':
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")

def test_access_interactive():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ –¥–æ—Å—Ç—É–ø–∞"""
    clear_screen()
    print("üö™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–ï–ö–û–†–ê–¢–û–†–ê –î–û–°–¢–£–ü–ê")
    print("-" * 50)
    
    # –ü—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    users = [
        {'name': '–ò–≤–∞–Ω', 'role': 'admin'},
        {'name': '–ú–∞—Ä–∏—è', 'role': 'manager'},
        {'name': '–ü–µ—Ç—Ä', 'role': 'user'},
        {'name': '–ê–Ω–Ω–∞', 'role': 'guest'}
    ]
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        for i, user in enumerate(users, 1):
            print(f"{i}. üë§ {user['name']} (—Ä–æ–ª—å: {user['role']})")
        print("5. üë§ –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("0. ‚Ü©Ô∏è –ù–∞–∑–∞–¥")
        
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
        
        if choice in ['1', '2', '3', '4']:
            user = users[int(choice) - 1]
            test_user_actions(user)
            
        elif choice == '5':
            user = create_custom_user()
            if user:
                test_user_actions(user)
                
        elif choice == '0':
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")

def create_custom_user():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("\n–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ").strip()
    if not name:
        print("‚ùå –ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
        return None
        
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: admin, manager, user, guest")
    role = input("–í–≤–µ–¥–∏—Ç–µ —Ä–æ–ª—å: ").strip().lower()
    if role not in ['admin', 'manager', 'user', 'guest']:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Ä–æ–ª—å!")
        return None
        
    return {'name': name, 'role': role}

def test_user_actions(user):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print(f"\nüë§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user['name']} (—Ä–æ–ª—å: {user['role']})")
    print("-" * 40)
    
    actions = [
        ("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö", delete_database),
        ("‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", edit_settings),
        ("üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ", view_data)
    ]
    
    for i, (desc, func) in enumerate(actions, 1):
        print(f"{i}. {desc}")
    print("0. ‚Ü©Ô∏è –ù–∞–∑–∞–¥")
    
    while True:
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
        if choice == '1':
            delete_database(user)
        elif choice == '2':
            edit_settings(user)
        elif choice == '3':
            view_data(user)
        elif choice == '0':
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")

def test_combined_decorators():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤"""
    clear_screen()
    print("üîÑ –ö–û–ú–ë–ò–ù–ò–†–û–í–ê–ù–ò–ï –î–ï–ö–û–†–ê–¢–û–†–û–í")
    print("-" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å –æ–±–æ–∏–º–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏
    @logger
    @require_role(['admin'])
    def secure_operation(user):
        result = f"–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user['name']}"
        print(f"‚úÖ {result}")
        return result
    
    print("–°–æ–∑–¥–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è secure_operation —Å –¥–≤—É–º—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏:")
    print("@logger")
    print("@require_role(['admin'])")
    print("\n–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç:")
    print("1. üéØ –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –≤—ã–∑–æ–≤—ã")
    print("2. üö™ –ü—Ä–æ–≤–µ—Ä—è—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞")
    
    users = [
        {'name': '–ê–¥–º–∏–Ω', 'role': 'admin'},
        {'name': '–û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', 'role': 'user'}
    ]
    
    for user in users:
        input(f"\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user['name']}...")
        print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user['name']} (—Ä–æ–ª—å: {user['role']})")
        result = secure_operation(user)
        if result:
            print(f"üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}")

def show_code():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–¥ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤"""
    clear_screen()
    print("üìã –ö–û–î –î–ï–ö–û–†–ê–¢–û–†–û–í")
    print("=" * 60)
    
    print("\n1. üéØ –î–ï–ö–û–†–ê–¢–û–† –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø:")
    print("""```python
def logger(func):
    def wrapper(*args, **kwargs):
        print(f"–í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ {func.__name__} —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ {args} –∏ {kwargs}")
        result = func(*args, **kwargs)
        print(f"–§—É–Ω–∫—Ü–∏—è {func.__name__} –≤–µ—Ä–Ω—É–ª–∞ {result}")
        return result
    return wrapper
```""")
    
    print("\n2. üö™ –î–ï–ö–û–†–ê–¢–û–† –î–û–°–¢–£–ü–ê:")
    print("""```python
def require_role(allowed_roles):
    def decorator(func):
        def wrapper(user, *args, **kwargs):
            if user.get('role') in allowed_roles:
                return func(user, *args, **kwargs)
            else:
                print(f"–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user['name']}")
                return None
        return wrapper
    return decorator
```""")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")

# ===== –ì–õ–ê–í–ù–ê–Ø –ü–†–û–ì–†–ê–ú–ú–ê =====

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    while True:
        clear_screen()
        print_menu()
        
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: ").strip()
        
        if choice == '1':
            test_logger_interactive()
        elif choice == '2':
            test_access_interactive()
        elif choice == '3':
            test_combined_decorators()
        elif choice == '4':
            show_code()
        elif choice == '0':
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!")
        sys.exit(0)